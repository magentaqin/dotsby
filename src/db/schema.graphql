type Query {
  allFile: AllFile!
}

type Mutation {
  create(absolutePath: String!, content: String!): File!
}

type AllFile {
  files: [File!]!
  filesConnection: FileConnection!
}

type FileConnection {
  pageInfo: PageInfo!
  edges: [FileEdge]!
  aggregate: AggregateFile!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type FileEdge {
  node: File!
  cursor: String!
}

type AggregateFile {
  count: Int!
}

type File {
  id: ID!
  absolutePath: String!
  content: String!
}